import { configureStore } from '@reduxjs/toolkit';import { usersReducer } from './slices/usersSlice';import { albumsApi } from './apis/albumsApi';import { photosApi } from './apis/photosApi';export const URL = 'http://localhost:8081'export const store = configureStore({  reducer: {    users: usersReducer,    albums: albumsApi.reducer,    photos: photosApi.reducer  },  middleware: (getDefaultMiddleware) => {    return getDefaultMiddleware()      .concat(albumsApi.middleware)      .concat(photosApi.middleware)  }});export type AppDispatch = typeof store.dispatch;export type RootState = ReturnType<typeof store.getState>export * from './thunks/fetchUsers';export * from './thunks/addUser';export * from './thunks/deleteUser';export { useFetchAlbumsQuery, useAddAlbumMutation, useDeleteAlbumMutation } from './apis/albumsApi'export { useFetchPhotosQuery, useAddPhotoMutation, useRemovePhotoMutation } from './apis/photosApi'